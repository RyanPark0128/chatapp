{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","src","alt","class","onClick","provider","GoogleAuthProvider","signInWithPopup","role","style","textTransform","width","marginBottom","marginRight","SignOut","currentUser","signOut","tabindex","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","borderRadius","type","props","messageClass","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAUAA,IAASC,cAAc,CAErBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGjB,IAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAgB3B,SAASC,IAOP,OACE,sBAAKC,UAAU,aAAf,UACE,qBAAKC,IAAI,iEAAiEC,IAAI,SAC9E,kDACA,8BACE,oBAAGC,MAAM,uBAAuBC,QAVb,WACvB,IAAMC,EAAW,IAAIlB,IAASU,KAAKS,mBACnCT,EAAKU,gBAAgBF,IAQ0CG,KAAK,SAASC,MAAO,CAAEC,cAAe,QAAjG,UACE,qBAAKC,MAAM,OAAOF,MAAO,CAAEG,aAAc,MAAOC,YAAa,OAASX,IAAI,iBAAiBD,IAAI,wHADjG,4BAgBR,SAASa,IACP,OAAOjB,EAAKkB,aACV,qBAAKf,UAAU,UAAf,SACE,wBAAQI,QAAS,kBAAMP,EAAKmB,WAAWC,SAAS,IAAIjB,UAAU,2BAA9D,wBAMN,SAASkB,IACP,IAAMC,EAAQC,mBACRC,EAAcvB,EAAUwB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAHhB,EAICC,YAAkBF,EAAO,CAAEG,QAAS,OAAhDC,EAJW,sBAKgBC,mBAAS,IALzB,mBAKXC,EALW,KAKAC,EALA,KAOZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQrC,EAAKkB,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZf,EAAYgB,IAAI,CACpBC,KAAMT,EACNU,UAAWpD,IAASW,UAAU0C,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbX,EAAMuB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OACI,sBAAK5C,UAAU,WAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,QAAb,2BACA,cAACc,EAAD,SAGJ,qBAAKd,UAAU,SAGf,uBAAMA,UAAU,UAAhB,UAEG2B,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAK/B,OAIb,uBAAMgC,SAAUpB,EAAhB,UAEE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,UAChE,wBAAQ3C,MAAO,CAAEE,MAAO,KAAM4C,aAAc,OAASvD,UAAU,mBAAmBwD,KAAK,SAAvF,qBAGF,qBAAKxD,UAAU,kBAQvB,SAAS+C,EAAYU,GAAQ,IAAD,EACMA,EAAMT,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbsB,EAAevB,IAAQtC,EAAKkB,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,qBAAKnC,UAAU,oBAAf,SACN,sBAAKA,UAAS,kBAAa0D,GAA3B,UACE,qBAAK1D,UAAU,aAAaC,IAAKmC,GAAY,0DAC7C,4BAAIE,SAMKqB,MAxHf,WAAgB,IAAD,EAEEC,YAAa/D,GAArBgE,EAFM,oBAIb,OACE,qBAAK7D,UAAU,kBAAf,SACE,8BACG6D,EAAO,cAAC3C,EAAD,IAAe,cAACnB,EAAD,SC5B/B+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd47ccda.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useRef } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport './App.css';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  // config\n  apiKey: \"AIzaSyDMt1FTJpotoKCZmeZEvKIz1FRUfMDfR4Q\",\n  authDomain: \"chatapp-8588d.firebaseapp.com\",\n  databaseURL: \"https://chatapp-8588d.firebaseio.com\",\n  projectId: \"chatapp-8588d\",\n  storageBucket: \"chatapp-8588d.appspot.com\",\n  messagingSenderId: \"40495559035\",\n  appId: \"1:40495559035:web:32f4200f0473b22326cdde\",\n  measurementId: \"G-0JX7M6Z06V\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"backgroundColor\">\n      <div>\n        {user ? <ChatRoom /> : <SignIn />}\n      </div>\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <div className=\"background\">\n      <img src=\"https://cdn.iconscout.com/icon/free/png-512/chatbox-457904.png\" alt=\"chat\" />\n      <h1> Simple Chat App</h1>\n      <div>\n        <a class=\"btn btn-outline-dark\" onClick={signInWithGoogle} role=\"button\" style={{ textTransform: 'none' }}>\n          <img width=\"20px\" style={{ marginBottom: '3px', marginRight: '5px' }} alt=\"Google sign-in\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\" />\n          Login with Google\n          </a>\n      </div>\n    </div>\n    // <div class=\"ui animated button\" style={{float:'right'}} onClick={signInWithGoogle}>\n    //   <div class=\"visible content\">Sign In</div>\n    //   <div class=\"hidden content\">\n    //     <i class=\"right arrow icon\"></i>\n    //   </div>\n    // </div>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <div className=\"signout\">\n      <button onClick={() => auth.signOut()} tabindex=\"0\" className=\"ui inverted basic button\">Sign Out</button>\n    </div>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt')\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n      <div className=\"chatroom\">\n        <header className=\"header\">\n          <div className=\"header-container\">\n            <p className=\"title\">SimpleChatApp</p>\n            <SignOut />\n          </div>\n        </header>\n        <div className=\"fill\">\n\n        </div>\n        <main className=\"content\">\n\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n          <span ref={dummy}></span>\n\n        </main>\n\n        <form onSubmit={sendMessage}>\n\n          <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n          <button style={{ width: \"5%\", borderRadius: \"0px\" }} className=\"ui yellow button\" type=\"submit\" >Send</button>\n\n        </form>\n        <div className=\"bottomFill\">\n\n        </div>\n      </div>\n  )\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<div className=\"message-container\">\n    <div className={`message ${messageClass}`}>\n      <img className=\"messagebox\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  </div>)\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}